// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cmd.proto

package com.navercorp.pinpoint.grpc.trace;

/**
 * Protobuf type {@code v1.PCmdRequest}
 */
public  final class PCmdRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v1.PCmdRequest)
    PCmdRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PCmdRequest.newBuilder() to construct.
  private PCmdRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PCmdRequest() {
    requestId_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PCmdRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            requestId_ = input.readInt32();
            break;
          }
          case 5682: {
            com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder subBuilder = null;
            if (commandCase_ == 710) {
              subBuilder = ((com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_).toBuilder();
            }
            command_ =
                input.readMessage(com.navercorp.pinpoint.grpc.trace.PCmdEcho.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_);
              command_ = subBuilder.buildPartial();
            }
            commandCase_ = 710;
            break;
          }
          case 5842: {
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder subBuilder = null;
            if (commandCase_ == 730) {
              subBuilder = ((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_).toBuilder();
            }
            command_ =
                input.readMessage(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_);
              command_ = subBuilder.buildPartial();
            }
            commandCase_ = 730;
            break;
          }
          case 5922: {
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder subBuilder = null;
            if (commandCase_ == 740) {
              subBuilder = ((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_).toBuilder();
            }
            command_ =
                input.readMessage(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_);
              command_ = subBuilder.buildPartial();
            }
            commandCase_ = 740;
            break;
          }
          case 6002: {
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder subBuilder = null;
            if (commandCase_ == 750) {
              subBuilder = ((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_).toBuilder();
            }
            command_ =
                input.readMessage(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_);
              command_ = subBuilder.buildPartial();
            }
            commandCase_ = 750;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.navercorp.pinpoint.grpc.trace.CmdProto.internal_static_v1_PCmdRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.navercorp.pinpoint.grpc.trace.CmdProto.internal_static_v1_PCmdRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.navercorp.pinpoint.grpc.trace.PCmdRequest.class, com.navercorp.pinpoint.grpc.trace.PCmdRequest.Builder.class);
  }

  private int commandCase_ = 0;
  private java.lang.Object command_;
  public enum CommandCase
      implements com.google.protobuf.Internal.EnumLite {
    COMMANDECHO(710),
    COMMANDACTIVETHREADCOUNT(730),
    COMMANDACTIVETHREADDUMP(740),
    COMMANDACTIVETHREADLIGHTDUMP(750),
    COMMAND_NOT_SET(0);
    private final int value;
    private CommandCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommandCase valueOf(int value) {
      return forNumber(value);
    }

    public static CommandCase forNumber(int value) {
      switch (value) {
        case 710: return COMMANDECHO;
        case 730: return COMMANDACTIVETHREADCOUNT;
        case 740: return COMMANDACTIVETHREADDUMP;
        case 750: return COMMANDACTIVETHREADLIGHTDUMP;
        case 0: return COMMAND_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CommandCase
  getCommandCase() {
    return CommandCase.forNumber(
        commandCase_);
  }

  public static final int REQUESTID_FIELD_NUMBER = 1;
  private int requestId_;
  /**
   * <code>int32 requestId = 1;</code>
   */
  public int getRequestId() {
    return requestId_;
  }

  public static final int COMMANDECHO_FIELD_NUMBER = 710;
  /**
   * <code>.v1.PCmdEcho commandEcho = 710;</code>
   */
  public boolean hasCommandEcho() {
    return commandCase_ == 710;
  }
  /**
   * <code>.v1.PCmdEcho commandEcho = 710;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdEcho getCommandEcho() {
    if (commandCase_ == 710) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
  }
  /**
   * <code>.v1.PCmdEcho commandEcho = 710;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdEchoOrBuilder getCommandEchoOrBuilder() {
    if (commandCase_ == 710) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
  }

  public static final int COMMANDACTIVETHREADCOUNT_FIELD_NUMBER = 730;
  /**
   * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
   */
  public boolean hasCommandActiveThreadCount() {
    return commandCase_ == 730;
  }
  /**
   * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount getCommandActiveThreadCount() {
    if (commandCase_ == 730) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
  }
  /**
   * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCountOrBuilder getCommandActiveThreadCountOrBuilder() {
    if (commandCase_ == 730) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
  }

  public static final int COMMANDACTIVETHREADDUMP_FIELD_NUMBER = 740;
  /**
   * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
   */
  public boolean hasCommandActiveThreadDump() {
    return commandCase_ == 740;
  }
  /**
   * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump getCommandActiveThreadDump() {
    if (commandCase_ == 740) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
  }
  /**
   * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDumpOrBuilder getCommandActiveThreadDumpOrBuilder() {
    if (commandCase_ == 740) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
  }

  public static final int COMMANDACTIVETHREADLIGHTDUMP_FIELD_NUMBER = 750;
  /**
   * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
   */
  public boolean hasCommandActiveThreadLightDump() {
    return commandCase_ == 750;
  }
  /**
   * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump getCommandActiveThreadLightDump() {
    if (commandCase_ == 750) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
  }
  /**
   * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
   */
  public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDumpOrBuilder getCommandActiveThreadLightDumpOrBuilder() {
    if (commandCase_ == 750) {
       return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_;
    }
    return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (requestId_ != 0) {
      output.writeInt32(1, requestId_);
    }
    if (commandCase_ == 710) {
      output.writeMessage(710, (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_);
    }
    if (commandCase_ == 730) {
      output.writeMessage(730, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_);
    }
    if (commandCase_ == 740) {
      output.writeMessage(740, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_);
    }
    if (commandCase_ == 750) {
      output.writeMessage(750, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requestId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, requestId_);
    }
    if (commandCase_ == 710) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(710, (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_);
    }
    if (commandCase_ == 730) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(730, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_);
    }
    if (commandCase_ == 740) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(740, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_);
    }
    if (commandCase_ == 750) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(750, (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.navercorp.pinpoint.grpc.trace.PCmdRequest)) {
      return super.equals(obj);
    }
    com.navercorp.pinpoint.grpc.trace.PCmdRequest other = (com.navercorp.pinpoint.grpc.trace.PCmdRequest) obj;

    boolean result = true;
    result = result && (getRequestId()
        == other.getRequestId());
    result = result && getCommandCase().equals(
        other.getCommandCase());
    if (!result) return false;
    switch (commandCase_) {
      case 710:
        result = result && getCommandEcho()
            .equals(other.getCommandEcho());
        break;
      case 730:
        result = result && getCommandActiveThreadCount()
            .equals(other.getCommandActiveThreadCount());
        break;
      case 740:
        result = result && getCommandActiveThreadDump()
            .equals(other.getCommandActiveThreadDump());
        break;
      case 750:
        result = result && getCommandActiveThreadLightDump()
            .equals(other.getCommandActiveThreadLightDump());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REQUESTID_FIELD_NUMBER;
    hash = (53 * hash) + getRequestId();
    switch (commandCase_) {
      case 710:
        hash = (37 * hash) + COMMANDECHO_FIELD_NUMBER;
        hash = (53 * hash) + getCommandEcho().hashCode();
        break;
      case 730:
        hash = (37 * hash) + COMMANDACTIVETHREADCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCommandActiveThreadCount().hashCode();
        break;
      case 740:
        hash = (37 * hash) + COMMANDACTIVETHREADDUMP_FIELD_NUMBER;
        hash = (53 * hash) + getCommandActiveThreadDump().hashCode();
        break;
      case 750:
        hash = (37 * hash) + COMMANDACTIVETHREADLIGHTDUMP_FIELD_NUMBER;
        hash = (53 * hash) + getCommandActiveThreadLightDump().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.navercorp.pinpoint.grpc.trace.PCmdRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v1.PCmdRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v1.PCmdRequest)
      com.navercorp.pinpoint.grpc.trace.PCmdRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navercorp.pinpoint.grpc.trace.CmdProto.internal_static_v1_PCmdRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navercorp.pinpoint.grpc.trace.CmdProto.internal_static_v1_PCmdRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.navercorp.pinpoint.grpc.trace.PCmdRequest.class, com.navercorp.pinpoint.grpc.trace.PCmdRequest.Builder.class);
    }

    // Construct using com.navercorp.pinpoint.grpc.trace.PCmdRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      requestId_ = 0;

      commandCase_ = 0;
      command_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.navercorp.pinpoint.grpc.trace.CmdProto.internal_static_v1_PCmdRequest_descriptor;
    }

    public com.navercorp.pinpoint.grpc.trace.PCmdRequest getDefaultInstanceForType() {
      return com.navercorp.pinpoint.grpc.trace.PCmdRequest.getDefaultInstance();
    }

    public com.navercorp.pinpoint.grpc.trace.PCmdRequest build() {
      com.navercorp.pinpoint.grpc.trace.PCmdRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.navercorp.pinpoint.grpc.trace.PCmdRequest buildPartial() {
      com.navercorp.pinpoint.grpc.trace.PCmdRequest result = new com.navercorp.pinpoint.grpc.trace.PCmdRequest(this);
      result.requestId_ = requestId_;
      if (commandCase_ == 710) {
        if (commandEchoBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = commandEchoBuilder_.build();
        }
      }
      if (commandCase_ == 730) {
        if (commandActiveThreadCountBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = commandActiveThreadCountBuilder_.build();
        }
      }
      if (commandCase_ == 740) {
        if (commandActiveThreadDumpBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = commandActiveThreadDumpBuilder_.build();
        }
      }
      if (commandCase_ == 750) {
        if (commandActiveThreadLightDumpBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = commandActiveThreadLightDumpBuilder_.build();
        }
      }
      result.commandCase_ = commandCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.navercorp.pinpoint.grpc.trace.PCmdRequest) {
        return mergeFrom((com.navercorp.pinpoint.grpc.trace.PCmdRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.navercorp.pinpoint.grpc.trace.PCmdRequest other) {
      if (other == com.navercorp.pinpoint.grpc.trace.PCmdRequest.getDefaultInstance()) return this;
      if (other.getRequestId() != 0) {
        setRequestId(other.getRequestId());
      }
      switch (other.getCommandCase()) {
        case COMMANDECHO: {
          mergeCommandEcho(other.getCommandEcho());
          break;
        }
        case COMMANDACTIVETHREADCOUNT: {
          mergeCommandActiveThreadCount(other.getCommandActiveThreadCount());
          break;
        }
        case COMMANDACTIVETHREADDUMP: {
          mergeCommandActiveThreadDump(other.getCommandActiveThreadDump());
          break;
        }
        case COMMANDACTIVETHREADLIGHTDUMP: {
          mergeCommandActiveThreadLightDump(other.getCommandActiveThreadLightDump());
          break;
        }
        case COMMAND_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.navercorp.pinpoint.grpc.trace.PCmdRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.navercorp.pinpoint.grpc.trace.PCmdRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public CommandCase
        getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public Builder clearCommand() {
      commandCase_ = 0;
      command_ = null;
      onChanged();
      return this;
    }


    private int requestId_ ;
    /**
     * <code>int32 requestId = 1;</code>
     */
    public int getRequestId() {
      return requestId_;
    }
    /**
     * <code>int32 requestId = 1;</code>
     */
    public Builder setRequestId(int value) {
      
      requestId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 requestId = 1;</code>
     */
    public Builder clearRequestId() {
      
      requestId_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdEcho, com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder, com.navercorp.pinpoint.grpc.trace.PCmdEchoOrBuilder> commandEchoBuilder_;
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public boolean hasCommandEcho() {
      return commandCase_ == 710;
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdEcho getCommandEcho() {
      if (commandEchoBuilder_ == null) {
        if (commandCase_ == 710) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
      } else {
        if (commandCase_ == 710) {
          return commandEchoBuilder_.getMessage();
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public Builder setCommandEcho(com.navercorp.pinpoint.grpc.trace.PCmdEcho value) {
      if (commandEchoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        commandEchoBuilder_.setMessage(value);
      }
      commandCase_ = 710;
      return this;
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public Builder setCommandEcho(
        com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder builderForValue) {
      if (commandEchoBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        commandEchoBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 710;
      return this;
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public Builder mergeCommandEcho(com.navercorp.pinpoint.grpc.trace.PCmdEcho value) {
      if (commandEchoBuilder_ == null) {
        if (commandCase_ == 710 &&
            command_ != com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance()) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdEcho.newBuilder((com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 710) {
          commandEchoBuilder_.mergeFrom(value);
        }
        commandEchoBuilder_.setMessage(value);
      }
      commandCase_ = 710;
      return this;
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public Builder clearCommandEcho() {
      if (commandEchoBuilder_ == null) {
        if (commandCase_ == 710) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 710) {
          commandCase_ = 0;
          command_ = null;
        }
        commandEchoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder getCommandEchoBuilder() {
      return getCommandEchoFieldBuilder().getBuilder();
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdEchoOrBuilder getCommandEchoOrBuilder() {
      if ((commandCase_ == 710) && (commandEchoBuilder_ != null)) {
        return commandEchoBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 710) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdEcho commandEcho = 710;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdEcho, com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder, com.navercorp.pinpoint.grpc.trace.PCmdEchoOrBuilder> 
        getCommandEchoFieldBuilder() {
      if (commandEchoBuilder_ == null) {
        if (!(commandCase_ == 710)) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdEcho.getDefaultInstance();
        }
        commandEchoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.navercorp.pinpoint.grpc.trace.PCmdEcho, com.navercorp.pinpoint.grpc.trace.PCmdEcho.Builder, com.navercorp.pinpoint.grpc.trace.PCmdEchoOrBuilder>(
                (com.navercorp.pinpoint.grpc.trace.PCmdEcho) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 710;
      onChanged();;
      return commandEchoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCountOrBuilder> commandActiveThreadCountBuilder_;
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public boolean hasCommandActiveThreadCount() {
      return commandCase_ == 730;
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount getCommandActiveThreadCount() {
      if (commandActiveThreadCountBuilder_ == null) {
        if (commandCase_ == 730) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
      } else {
        if (commandCase_ == 730) {
          return commandActiveThreadCountBuilder_.getMessage();
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public Builder setCommandActiveThreadCount(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount value) {
      if (commandActiveThreadCountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        commandActiveThreadCountBuilder_.setMessage(value);
      }
      commandCase_ = 730;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public Builder setCommandActiveThreadCount(
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder builderForValue) {
      if (commandActiveThreadCountBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        commandActiveThreadCountBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 730;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public Builder mergeCommandActiveThreadCount(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount value) {
      if (commandActiveThreadCountBuilder_ == null) {
        if (commandCase_ == 730 &&
            command_ != com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance()) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.newBuilder((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 730) {
          commandActiveThreadCountBuilder_.mergeFrom(value);
        }
        commandActiveThreadCountBuilder_.setMessage(value);
      }
      commandCase_ = 730;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public Builder clearCommandActiveThreadCount() {
      if (commandActiveThreadCountBuilder_ == null) {
        if (commandCase_ == 730) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 730) {
          commandCase_ = 0;
          command_ = null;
        }
        commandActiveThreadCountBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder getCommandActiveThreadCountBuilder() {
      return getCommandActiveThreadCountFieldBuilder().getBuilder();
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCountOrBuilder getCommandActiveThreadCountOrBuilder() {
      if ((commandCase_ == 730) && (commandActiveThreadCountBuilder_ != null)) {
        return commandActiveThreadCountBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 730) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadCount commandActiveThreadCount = 730;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCountOrBuilder> 
        getCommandActiveThreadCountFieldBuilder() {
      if (commandActiveThreadCountBuilder_ == null) {
        if (!(commandCase_ == 730)) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.getDefaultInstance();
        }
        commandActiveThreadCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCountOrBuilder>(
                (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadCount) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 730;
      onChanged();;
      return commandActiveThreadCountBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDumpOrBuilder> commandActiveThreadDumpBuilder_;
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public boolean hasCommandActiveThreadDump() {
      return commandCase_ == 740;
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump getCommandActiveThreadDump() {
      if (commandActiveThreadDumpBuilder_ == null) {
        if (commandCase_ == 740) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
      } else {
        if (commandCase_ == 740) {
          return commandActiveThreadDumpBuilder_.getMessage();
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public Builder setCommandActiveThreadDump(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump value) {
      if (commandActiveThreadDumpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        commandActiveThreadDumpBuilder_.setMessage(value);
      }
      commandCase_ = 740;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public Builder setCommandActiveThreadDump(
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder builderForValue) {
      if (commandActiveThreadDumpBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        commandActiveThreadDumpBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 740;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public Builder mergeCommandActiveThreadDump(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump value) {
      if (commandActiveThreadDumpBuilder_ == null) {
        if (commandCase_ == 740 &&
            command_ != com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance()) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.newBuilder((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 740) {
          commandActiveThreadDumpBuilder_.mergeFrom(value);
        }
        commandActiveThreadDumpBuilder_.setMessage(value);
      }
      commandCase_ = 740;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public Builder clearCommandActiveThreadDump() {
      if (commandActiveThreadDumpBuilder_ == null) {
        if (commandCase_ == 740) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 740) {
          commandCase_ = 0;
          command_ = null;
        }
        commandActiveThreadDumpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder getCommandActiveThreadDumpBuilder() {
      return getCommandActiveThreadDumpFieldBuilder().getBuilder();
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDumpOrBuilder getCommandActiveThreadDumpOrBuilder() {
      if ((commandCase_ == 740) && (commandActiveThreadDumpBuilder_ != null)) {
        return commandActiveThreadDumpBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 740) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadDump commandActiveThreadDump = 740;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDumpOrBuilder> 
        getCommandActiveThreadDumpFieldBuilder() {
      if (commandActiveThreadDumpBuilder_ == null) {
        if (!(commandCase_ == 740)) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.getDefaultInstance();
        }
        commandActiveThreadDumpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDumpOrBuilder>(
                (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadDump) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 740;
      onChanged();;
      return commandActiveThreadDumpBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDumpOrBuilder> commandActiveThreadLightDumpBuilder_;
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public boolean hasCommandActiveThreadLightDump() {
      return commandCase_ == 750;
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump getCommandActiveThreadLightDump() {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        if (commandCase_ == 750) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
      } else {
        if (commandCase_ == 750) {
          return commandActiveThreadLightDumpBuilder_.getMessage();
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public Builder setCommandActiveThreadLightDump(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump value) {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        commandActiveThreadLightDumpBuilder_.setMessage(value);
      }
      commandCase_ = 750;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public Builder setCommandActiveThreadLightDump(
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder builderForValue) {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        commandActiveThreadLightDumpBuilder_.setMessage(builderForValue.build());
      }
      commandCase_ = 750;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public Builder mergeCommandActiveThreadLightDump(com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump value) {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        if (commandCase_ == 750 &&
            command_ != com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance()) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.newBuilder((com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_)
              .mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        if (commandCase_ == 750) {
          commandActiveThreadLightDumpBuilder_.mergeFrom(value);
        }
        commandActiveThreadLightDumpBuilder_.setMessage(value);
      }
      commandCase_ = 750;
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public Builder clearCommandActiveThreadLightDump() {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        if (commandCase_ == 750) {
          commandCase_ = 0;
          command_ = null;
          onChanged();
        }
      } else {
        if (commandCase_ == 750) {
          commandCase_ = 0;
          command_ = null;
        }
        commandActiveThreadLightDumpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder getCommandActiveThreadLightDumpBuilder() {
      return getCommandActiveThreadLightDumpFieldBuilder().getBuilder();
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    public com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDumpOrBuilder getCommandActiveThreadLightDumpOrBuilder() {
      if ((commandCase_ == 750) && (commandActiveThreadLightDumpBuilder_ != null)) {
        return commandActiveThreadLightDumpBuilder_.getMessageOrBuilder();
      } else {
        if (commandCase_ == 750) {
          return (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_;
        }
        return com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
      }
    }
    /**
     * <code>.v1.PCmdActiveThreadLightDump commandActiveThreadLightDump = 750;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDumpOrBuilder> 
        getCommandActiveThreadLightDumpFieldBuilder() {
      if (commandActiveThreadLightDumpBuilder_ == null) {
        if (!(commandCase_ == 750)) {
          command_ = com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.getDefaultInstance();
        }
        commandActiveThreadLightDumpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump.Builder, com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDumpOrBuilder>(
                (com.navercorp.pinpoint.grpc.trace.PCmdActiveThreadLightDump) command_,
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      commandCase_ = 750;
      onChanged();;
      return commandActiveThreadLightDumpBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:v1.PCmdRequest)
  }

  // @@protoc_insertion_point(class_scope:v1.PCmdRequest)
  private static final com.navercorp.pinpoint.grpc.trace.PCmdRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.navercorp.pinpoint.grpc.trace.PCmdRequest();
  }

  public static com.navercorp.pinpoint.grpc.trace.PCmdRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PCmdRequest>
      PARSER = new com.google.protobuf.AbstractParser<PCmdRequest>() {
    public PCmdRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PCmdRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PCmdRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PCmdRequest> getParserForType() {
    return PARSER;
  }

  public com.navercorp.pinpoint.grpc.trace.PCmdRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

